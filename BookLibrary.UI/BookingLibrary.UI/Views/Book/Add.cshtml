@model BookingLibrary.UI.DTOs.AddBookDTO
@{
    ViewBag.Title = "Add";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Add Book Repository</h2>

<section>
    @using (Html.BeginForm("Add", "Book", null, FormMethod.Post, new { @class = "form-horizontal" }))
    {
        <div class="form-group">
            <label for="tenantName" class="col-md-2 control-label">Book Name</label>
            <div class="col-md-10">
                @Html.TextBoxFor(p => p.BookName, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            <label for="email" class="col-md-2 control-label">ISBN</label>
            <div class="col-md-10">
                @Html.TextBoxFor(p => p.ISBN, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            <label for="email" class="col-md-2 control-label">Date Issued</label>
            <div class="col-md-10">
                @Html.TextBoxFor(p => p.IssueDate, new { @class = "form-control", @readonly = "readonly" })
            </div>
        </div>
        <div class="form-group">
            <label for="email" class="col-md-2 control-label">Description</label>
            <div class="col-md-10">
                @Html.TextAreaFor(p => p.Description, new { @style = "max-width: 100%", @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            <input type="button" class="btn btn-default" value="保存" id="btnSave" />
            <input type="button" class="btn btn-default" value="返回" onclick="window.location='@Url.Action("List", "Book")'" />
        </div>

    }
</section>

@section header{


}

@section scripts{
    <script type="text/javascript">
        var currentCommandUnqiueId = null;

        $(function () {
            $.connection.hub.url = "http://localhost:6044/signalr";
            $.connection.hub.logging = true;
            var command = $.connection.commandHub;

            command.client.success = function (commandUniqueId) {

                if (commandUniqueId == currentCommandUnqiueId) {
                    hideMask();
                    alert('Create successfully.');
                    command.server.removeCommand(currentCommandUnqiueId);
                    window.location = '@Url.Action("List", "Book")';
                }
            };

            command.client.failure = function (commandUniqueId) {
                if (commandUniqueId == currentCommandUnqiueId) {
                    alert('Create failure.');
                }
            };

            command.client.test = function () {
                alert("Called from server successfully.");
            };

            $.connection.hub.start().done(function () {
                console.log("Connected.");
            });


            $("#IssueDate").datepicker({ dateFormat: "yy-mm-dd" });

            $('#btnSave').click(function () {
                showMask();

                $.ajax({
                    url: '',
                    data: { BookName: $('#BookName').val(), ISBN: $('#ISBN').val(), IssueDate: $('#IssueDate').val(), Description: $('#Description').val() },
                    type: 'POST',
                    success: function (data) {

                        if (data && data.commandUnqiueId) {
                           currentCommandUnqiueId = data.commandUnqiueId;
                        }

                        //hideMask();
                    },
                    error: function () {
                        hideMask();
                    }
                });
            });
        });
    </script>
}